"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var page_1 = require("ui/page");
var nativescript_bottom_navigation_1 = require("nativescript-bottom-navigation");
// import { registerElement } from "nativescript-angular/element-registry";
// registerElement("Fab", () => require("nativescript-floatingactionbutton").Fab);
//import { registerElement } from "nativescript-angular/element-registry";
//import { CardView } from "nativescript-cardview";
//registerElement("CardView", () => CardView);
// import * as elementRegistryModule from "nativescript-angular/element-registry";
// import * as LabelModule from "tns-core-modules/ui/label";
// elementRegistryModule.registerElement(
//   "CardView",
//   () => require("nativescript-cardview").CardView
// );
var ReportIssueComponent = /** @class */ (function () {
    function ReportIssueComponent(page) {
        this.page = page;
        this.selectedTab = 0;
        this.tabs = [
            new nativescript_bottom_navigation_1.BottomNavigationTab('First', 'shop'),
            new nativescript_bottom_navigation_1.BottomNavigationTab('Second', 'box', false),
            new nativescript_bottom_navigation_1.BottomNavigationTab('Third', 'accept'),
            new nativescript_bottom_navigation_1.BottomNavigationTab('Fourth', 'user')
        ];
    }
    ReportIssueComponent.prototype.ngOnInit = function () {
        this._bottomNavigation = this.page.getViewById('bottomNavigation');
    };
    ReportIssueComponent.prototype.onBottomNavigationTabSelected = function (args) {
        this.selectedTab = args.newIndex;
        if (this.selectedTab === 1) {
            alert('This item has selectable: false, and should be used to perform actions');
        }
        console.log("old tab index:  " + args.oldIndex);
        console.log("selected tab index:  " + args.newIndex);
    };
    ReportIssueComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: "ns-reportissue",
            templateUrl: "./reportissue.component.html",
            styleUrls: ["./reportissue-common.css", "./reportissue.component.css"],
        }),
        __metadata("design:paramtypes", [page_1.Page])
    ], ReportIssueComponent);
    return ReportIssueComponent;
}());
exports.ReportIssueComponent = ReportIssueComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3J0aXNzdWUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicmVwb3J0aXNzdWUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQWlFO0FBU2pFLGdDQUErQjtBQWUvQixpRkFJd0M7QUFNeEMsMkVBQTJFO0FBQzNFLGtGQUFrRjtBQUNsRiwwRUFBMEU7QUFDMUUsbURBQW1EO0FBQ25ELDhDQUE4QztBQUU5QyxrRkFBa0Y7QUFDbEYsNERBQTREO0FBQzVELHlDQUF5QztBQUN6QyxnQkFBZ0I7QUFDaEIsb0RBQW9EO0FBQ3BELEtBQUs7QUFXTDtJQWFJLDhCQUFvQixJQUFVO1FBQVYsU0FBSSxHQUFKLElBQUksQ0FBTTtRQVZ2QixnQkFBVyxHQUFXLENBQUMsQ0FBQztRQUN4QixTQUFJLEdBQTBCO1lBQ2pDLElBQUksb0RBQW1CLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQztZQUN4QyxJQUFJLG9EQUFtQixDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDO1lBQy9DLElBQUksb0RBQW1CLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQztZQUMxQyxJQUFJLG9EQUFtQixDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUM7U0FDNUMsQ0FBQztJQUlnQyxDQUFDO0lBRW5DLHVDQUFRLEdBQVI7UUFDSSxJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRUQsNERBQTZCLEdBQTdCLFVBQThCLElBQTRCO1FBQ3RELElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNqQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDekIsS0FBSyxDQUFDLHdFQUF3RSxDQUFDLENBQUM7UUFDcEYsQ0FBQztRQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQW1CLElBQUksQ0FBQyxRQUFVLENBQUMsQ0FBQztRQUNoRCxPQUFPLENBQUMsR0FBRyxDQUFDLDBCQUF3QixJQUFJLENBQUMsUUFBVSxDQUFDLENBQUM7SUFDekQsQ0FBQztJQTFCUSxvQkFBb0I7UUFSaEMsZ0JBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxNQUFNLENBQUMsRUFBRTtZQUNuQixRQUFRLEVBQUUsZ0JBQWdCO1lBQzFCLFdBQVcsRUFBRSw4QkFBOEI7WUFDM0MsU0FBUyxFQUFFLENBQUMsMEJBQTBCLEVBQUUsNkJBQTZCLENBQUM7U0FDekUsQ0FBQzt5Q0FnQjRCLFdBQUk7T0FickIsb0JBQW9CLENBa0NoQztJQUFELDJCQUFDO0NBQUEsQUFsQ0QsSUFrQ0M7QUFsQ1ksb0RBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEFmdGVyVmlld0luaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBSb3V0ZXIsIEFjdGl2YXRlZFJvdXRlIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xyXG5pbXBvcnQgeyBMb2NhdGlvbiB9IGZyb20gXCJAYW5ndWxhci9jb21tb25cIjtcclxuaW1wb3J0IHsgU25hY2tCYXIgfSBmcm9tIFwibmF0aXZlc2NyaXB0LXNuYWNrYmFyXCI7XHJcbmltcG9ydCAqIGFzIEFwcGxpY2F0aW9uU2V0dGluZ3MgZnJvbSBcImFwcGxpY2F0aW9uLXNldHRpbmdzXCI7XHJcbmltcG9ydCB7IGNvbm5lY3Rpb25UeXBlLCBnZXRDb25uZWN0aW9uVHlwZSB9IGZyb20gXCJjb25uZWN0aXZpdHlcIjtcclxuaW1wb3J0IHsgQW5pbWF0aW9uIH0gZnJvbSBcInVpL2FuaW1hdGlvblwiO1xyXG5pbXBvcnQgeyBWaWV3IH0gZnJvbSBcInVpL2NvcmUvdmlld1wiO1xyXG5pbXBvcnQgeyBwcm9tcHQgfSBmcm9tIFwidWkvZGlhbG9nc1wiO1xyXG5pbXBvcnQgeyBQYWdlIH0gZnJvbSBcInVpL3BhZ2VcIjtcclxuaW1wb3J0IHsgVGV4dEZpZWxkIH0gZnJvbSBcInVpL3RleHQtZmllbGRcIjtcclxuXHJcbmltcG9ydCB7IFZhbHVlTGlzdCwgRHJvcERvd24gfSBmcm9tIFwibmF0aXZlc2NyaXB0LWRyb3AtZG93blwiO1xyXG5pbXBvcnQgeyBTZWxlY3RlZEluZGV4Q2hhbmdlZEV2ZW50RGF0YSB9IGZyb20gXCJuYXRpdmVzY3JpcHQtZHJvcC1kb3duXCI7XHJcbmltcG9ydCB7IENvb3BlcmF0aXZlLCBVc2VyIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2luZGV4JztcclxuaW1wb3J0IHsgQ29vcGVyYXRpdmVTZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2Nvb3BlcmF0aXZlLnNlcnZpY2VcIjtcclxuaW1wb3J0IHsgQ29vcGVyYXRpdmVTdGFmZlNlcnZpY2UgfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvY29vcGVyYXRpdmVTdGFmZi5zZXJ2aWNlXCI7XHJcblxyXG5pbXBvcnQgeyBNZW1iZXJTZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL21lbWJlci5zZXJ2aWNlXCI7XHJcblxyXG5pbXBvcnQgeyBDb29wZXJhdGl2ZVN0YWZmLCBWZXJpZnlBdXRoIH0gZnJvbSBcIi4uLy4uL21vZGVscy9pbmRleFwiO1xyXG5cclxuaW1wb3J0IHsgVE5TRmFuY3lBbGVydCB9IGZyb20gXCJuYXRpdmVzY3JpcHQtZmFuY3lhbGVydFwiO1xyXG5cclxuaW1wb3J0IHtcclxuICAgIEJvdHRvbU5hdmlnYXRpb24sXHJcbiAgICBCb3R0b21OYXZpZ2F0aW9uVGFiLFxyXG4gICAgT25UYWJTZWxlY3RlZEV2ZW50RGF0YVxyXG59IGZyb20gXCJuYXRpdmVzY3JpcHQtYm90dG9tLW5hdmlnYXRpb25cIjtcclxuaW1wb3J0IHtcclxuICAgIEFuZHJvaWREYXRhLCBFbGV2YXRpb24sXHJcbiAgICBTaGFwZSwgU2hhcGVFbnVtXHJcbn0gZnJvbSAnbmF0aXZlc2NyaXB0LW5nLXNoYWRvdyc7XHJcblxyXG4vLyBpbXBvcnQgeyByZWdpc3RlckVsZW1lbnQgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvZWxlbWVudC1yZWdpc3RyeVwiO1xyXG4vLyByZWdpc3RlckVsZW1lbnQoXCJGYWJcIiwgKCkgPT4gcmVxdWlyZShcIm5hdGl2ZXNjcmlwdC1mbG9hdGluZ2FjdGlvbmJ1dHRvblwiKS5GYWIpO1xyXG4vL2ltcG9ydCB7IHJlZ2lzdGVyRWxlbWVudCB9IGZyb20gXCJuYXRpdmVzY3JpcHQtYW5ndWxhci9lbGVtZW50LXJlZ2lzdHJ5XCI7XHJcbi8vaW1wb3J0IHsgQ2FyZFZpZXcgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWNhcmR2aWV3XCI7XHJcbi8vcmVnaXN0ZXJFbGVtZW50KFwiQ2FyZFZpZXdcIiwgKCkgPT4gQ2FyZFZpZXcpO1xyXG5cclxuLy8gaW1wb3J0ICogYXMgZWxlbWVudFJlZ2lzdHJ5TW9kdWxlIGZyb20gXCJuYXRpdmVzY3JpcHQtYW5ndWxhci9lbGVtZW50LXJlZ2lzdHJ5XCI7XHJcbi8vIGltcG9ydCAqIGFzIExhYmVsTW9kdWxlIGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2xhYmVsXCI7XHJcbi8vIGVsZW1lbnRSZWdpc3RyeU1vZHVsZS5yZWdpc3RlckVsZW1lbnQoXHJcbi8vICAgXCJDYXJkVmlld1wiLFxyXG4vLyAgICgpID0+IHJlcXVpcmUoXCJuYXRpdmVzY3JpcHQtY2FyZHZpZXdcIikuQ2FyZFZpZXdcclxuLy8gKTtcclxuXHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIG1vZHVsZUlkOiBtb2R1bGUuaWQsXHJcbiAgICBzZWxlY3RvcjogXCJucy1yZXBvcnRpc3N1ZVwiLFxyXG4gICAgdGVtcGxhdGVVcmw6IFwiLi9yZXBvcnRpc3N1ZS5jb21wb25lbnQuaHRtbFwiLFxyXG4gICAgc3R5bGVVcmxzOiBbXCIuL3JlcG9ydGlzc3VlLWNvbW1vbi5jc3NcIiwgXCIuL3JlcG9ydGlzc3VlLmNvbXBvbmVudC5jc3NcIl0sXHJcbn0pXHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIFJlcG9ydElzc3VlQ29tcG9uZW50IHtcclxuXHJcbiAgICBcclxuICAgIHB1YmxpYyBzZWxlY3RlZFRhYjogbnVtYmVyID0gMDtcclxuICAgIHB1YmxpYyB0YWJzOiBCb3R0b21OYXZpZ2F0aW9uVGFiW10gPSBbXHJcbiAgICAgICAgbmV3IEJvdHRvbU5hdmlnYXRpb25UYWIoJ0ZpcnN0JywgJ3Nob3AnKSxcclxuICAgICAgICBuZXcgQm90dG9tTmF2aWdhdGlvblRhYignU2Vjb25kJywgJ2JveCcsIGZhbHNlKSxcclxuICAgICAgICBuZXcgQm90dG9tTmF2aWdhdGlvblRhYignVGhpcmQnLCAnYWNjZXB0JyksXHJcbiAgICAgICAgbmV3IEJvdHRvbU5hdmlnYXRpb25UYWIoJ0ZvdXJ0aCcsICd1c2VyJylcclxuICAgIF07XHJcblxyXG4gICAgcHJpdmF0ZSBfYm90dG9tTmF2aWdhdGlvbjogQm90dG9tTmF2aWdhdGlvbjtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHBhZ2U6IFBhZ2UpIHsgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2JvdHRvbU5hdmlnYXRpb24gPSB0aGlzLnBhZ2UuZ2V0Vmlld0J5SWQoJ2JvdHRvbU5hdmlnYXRpb24nKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkJvdHRvbU5hdmlnYXRpb25UYWJTZWxlY3RlZChhcmdzOiBPblRhYlNlbGVjdGVkRXZlbnREYXRhKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZWxlY3RlZFRhYiA9IGFyZ3MubmV3SW5kZXg7XHJcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRUYWIgPT09IDEpIHtcclxuICAgICAgICAgICAgYWxlcnQoJ1RoaXMgaXRlbSBoYXMgc2VsZWN0YWJsZTogZmFsc2UsIGFuZCBzaG91bGQgYmUgdXNlZCB0byBwZXJmb3JtIGFjdGlvbnMnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc29sZS5sb2coYG9sZCB0YWIgaW5kZXg6ICAke2FyZ3Mub2xkSW5kZXh9YCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coYHNlbGVjdGVkIHRhYiBpbmRleDogICR7YXJncy5uZXdJbmRleH1gKTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbn0iXX0=